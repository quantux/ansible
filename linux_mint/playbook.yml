---
- name: Pós-instalação Linux Mint completa
  hosts: localhost
  gather_facts: yes

  vars:
    restic_repo: "/media/restic/restic_notebook_repo"
    pacotes_apt: "{{ lookup('file','pacotes_apt.txt').splitlines() }}"
    pacotes_flatpak: "{{ lookup('file','pacotes_flatpak.txt').splitlines() }}"

  tasks:
    # ----------------------------
    # RESTIC
    # ----------------------------

    - name: Restaurar backup Restic
      block:
        - name: Verifica se Restic está instalado
          ansible.builtin.package:
            name: restic
            state: present

        - name: Verifica marcador de restauração
          ansible.builtin.stat:
            path: /var/log/restic_restore_done
          register: restic_restore_marker

        - name: Digite a senha do Restic
          ansible.builtin.pause:
            prompt: "Digite a senha do repositório Restic:"
            echo: no
          register: restic_password_input
          when: not restic_restore_marker.stat.exists

        - name: Definir variável de senha
          ansible.builtin.set_fact:
            restic_password: "{{ restic_password_input.user_input | default('') }}"
          when: restic_password_input is defined

        - name: Restaurar backup Restic
          ansible.builtin.command:
            cmd: >
              restic -r {{ restic_repo }} restore latest
              --target /
              --tag mths
              --tag linux_mint
          environment:
            RESTIC_PASSWORD: "{{ restic_password }}"
          when:
            - not restic_restore_marker.stat.exists
            - restic_password is defined
            - restic_password | length > 0
          register: restic_restore
          changed_when: restic_restore.rc == 0

        - name: Criar marcador de restauração concluída
          ansible.builtin.file:
            path: /var/log/restic_restore_done
            state: touch
          when: restic_restore is changed
          become: true

    # ----------------------------
    # TAREFAS ADMINISTRATIVAS (ROOT)
    # ----------------------------

    - name: Atualizar repositórios e pacotes
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
      become: true

    - name: Habilitar arquitetura i386
      ansible.builtin.command: dpkg --add-architecture i386
      become: true

    - name: Instalar pacotes apt
      ansible.builtin.apt:
        name: "{{ pacotes_apt }}"
        state: present
        update_cache: yes
      become: true
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: Instalar pacotes Flatpak
      community.general.flatpak:
        name: "{{ item }}"
        state: present
        remote: flathub
      loop: "{{ pacotes_flatpak }}"
      become: true

    - name: Verificar se Docker está instalado
      ansible.builtin.command: which docker
      register: docker_instalado
      ignore_errors: yes

    - name: Baixar script de instalação do Docker
      ansible.builtin.get_url:
        url: https://get.docker.com
        dest: /tmp/get-docker.sh
        mode: '0755'
      when: docker_instalado.rc != 0
      become: true

    - name: Executar script de instalação do Docker
      ansible.builtin.shell: /tmp/get-docker.sh
      args:
        executable: /bin/bash
      when: docker_instalado.rc != 0
      become: true

    - name: Adicionar usuário atual ao grupo docker
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes
      become: true

    - name: Fazer pull apenas das imagens apache e nginx
      ansible.builtin.command:
        cmd: >
          docker compose -f {{ ansible_user_dir }}/.scripts/docker-apps/docker-compose.yml pull
      become: true

    - name: Subir containers syncthing e stirling-pdf
      ansible.builtin.command:
        cmd: >
          docker compose -f {{ ansible_user_dir }}/.scripts/docker-apps/docker-compose.yml up -d syncthing stirling-pdf
      become: true

    # ----------------------------
    # TEMAS, ÍCONES E FONTES
    # ----------------------------

    - name: Instalar tema Adapta-Nokto
      ansible.builtin.unarchive:
        src: "./assets/themes/Adapta-Nokto.tar.xz"
        dest: "/usr/share/themes"
        remote_src: yes
      become: true

    - name: Instalar tema Flat-Remix-GTK-Blue-Darkest
      ansible.builtin.unarchive:
        src: "./assets/themes/Flat-Remix-GTK-Blue-Darkest-Solid-NoBorder.tar.xz"
        dest: "/usr/share/themes"
        remote_src: yes
      become: true

    - name: Instalar ícones La-Capitaine
      ansible.builtin.unarchive:
        src: "./assets/icons/la-capitaine.tar.xz"
        dest: "/usr/share/icons/"
        remote_src: yes
      become: true

    - name: Baixar FiraCode Nerd Font
      ansible.builtin.get_url:
        url: "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.1/FiraCode.zip"
        dest: /tmp/firacode.zip
        mode: '0644'

    - name: Descompactar FiraCode Nerd Font em /usr/share/fonts
      ansible.builtin.unarchive:
        src: /tmp/firacode.zip
        dest: /usr/share/fonts/
        remote_src: yes
      become: yes

    # ----------------------------
    # CONFIGURAÇÕES DE USUÁRIO
    # ----------------------------

    - name: Permitir jogos rodarem em fullscreen
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS=0"
      become: true

    - name: Baixar e instalar TeamViewer
      block:
        - ansible.builtin.get_url:
            url: "https://download.teamviewer.com/download/linux/teamviewer_amd64.deb"
            dest: /tmp/teamviewer.deb
        - ansible.builtin.apt:
            deb: /tmp/teamviewer.deb
            state: present
      become: true

    - name: Baixar e instalar oh-my-posh
      ansible.builtin.get_url:
        url: "https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64"
        dest: /usr/local/bin/oh-my-posh
        mode: '0755'
      become: true

    - name: Baixar script Tailscale
      ansible.builtin.get_url:
        url: https://tailscale.com/install.sh
        dest: /tmp/tailscale_install.sh
        mode: '0755'
      become: true

    - name: Executar script Tailscale
      ansible.builtin.shell: /tmp/tailscale_install.sh
      become: true

    - name: Atualizar tldr usando zsh com ativação do venv
      ansible.builtin.shell: |
        source /home/mths/.scripts/python3-venv/bin/activate
        tldr --update
      args:
        executable: /usr/bin/zsh

    - name: Carregar configurações do dconf
      ansible.builtin.shell: |
        dconf load / < {{ ansible_user_dir }}/.dconf/dconf

    - name: Configurar qBittorrent como app padrão de magnet
      ansible.builtin.command: xdg-mime default org.qbittorrent.qBittorrent.desktop x-scheme-handler/magnet

    - name: Definir zsh como shell padrão
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
      become: true
